@model PaginatedList<Order>

@{
    ViewData["Title"] = "Index";
}

@* @if (TempData["success"] != null)  -> napravili smo novi view (_Notiication) i sad njega mozemo da implmeniramo u sve view => <partil name="_Notification"/>
{
    <h2>@TempData["success"]</h2> -> success -> mora da ima isti tag name kao u contolleru
}

<partial name="_Notification" />  -> prebacili u _Layout view
 *@

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h1>Orders List</h1>
        </div>

        <div class="col-6 text-end">
            <a asp-action="Create" class="btn btn-warning">
                <i class="bi bi-plus-circle-fill"></i> &nbsp; Create New Order
            </a>
        </div>

        <div class="col-12 mt-2">
            <div class="d-flex justify-content-between">
                <div>
                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-searchString="@ViewData["SearchString"]" class="btn btn-default @prevDisabled">
                        Previous
                    </a>

                    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-searchString="@ViewData["SearchString"]" class="btn btn-default @nextDisabled">
                        Next
                    </a>
                </div>

                <div class="ml-auto">
                    <a asp-action="Index" class="btn btn-link">Back to Full List</a>
                </div>

                <div class="ml-auto">
                    <a asp-controller="Orders" asp-action="ExcelExport" class="btn btn-success" style="width: 150px">
                        ExportExcel
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>




@* <div>
    <form asp-action="Index" method="get">
        <p>
            <label for="searchString"></label>
            <input type="text" name="searchString" placeholder="Enter oID, City, Country..." />
            <button type="submit" class="btn btn-primary">Search</button>
            <a asp-action="Index" class="btn btn-link">Back to Full List</a>
        </p>
    </form>
</div> *@

<div class="container h-100">
   <form asp-action="Index" method="get" class="w-100">
        <div class="d-flex justify-content-center h-100">
            <div class="input-group">
                  <input type="text" name="searchString" class="form-control" name="searchString" placeholder="Enter OrderId, City, Country, OrderStatus..." aria-label="Search" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </div>
        </div>
   </form>
</div>


<div class="col-12 mt-2">
 <table class="table">
    <thead>
        <tr>
            <th>
                Orderid
            </th>
            <th>
                Orderdate
            </th>
            <th>
                Requireddate
            </th>
            <th>
                Shippeddate
            </th>
            <th>
                Freight
            </th>
            <th>
                Shipname
            </th>
            <th>
                Shipaddress
            </th>
            <th>
                Shipcity
            </th>
            <th>
                Shippostalcode
            </th>
            <th>
                Shipcountry
            </th>
            <th>
                Orderstatus
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Orderid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Orderdate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Requireddate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shippeddate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Freight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shipname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shipaddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shipcity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shippostalcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shipcountry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Orderstatus)
                </td>
                <td>
                    @* Ovde definisemo path za action metode iz contolera - asp-route-id *@

                    <a asp-action="Edit" asp-route-id="@item.Orderid" class="bi bi-pencil-fill" style="width:50px"></a> @* ITEM je gore iz foreach petlje tj path*@
                    <a asp-action="Details" asp-route-id="@item.Orderid" class="bi bi-journal-text" style="width:50px"></a>
                    <a asp-action="Delete" asp-route-id="@item.Orderid" class="bi bi-trash3-fill" style="width:50px"></a>
                </td>
            </tr>
        }
    </tbody>
 </table>
</div>


<a asp-action="Index" asp-route-pageNumber ="@(Model.PageIndex-1)" class ="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">
    Next
</a>

